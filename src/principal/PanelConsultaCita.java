/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import static principal.FrPrincipal.menu;
import static principal.FrPrincipal.panelAltaCliente;
import static principal.FrPrincipal.panelAltaHistorial;
import static principal.FrPrincipal.panelAltaMascota;
import static principal.FrPrincipal.panelBienvenida;
import static principal.FrPrincipal.panelConsultaCita;
import static principal.FrPrincipal.panelConsultaCliente;
import static principal.FrPrincipal.panelConsultaHistorial;
import static principal.FrPrincipal.panelConsultaMascota;
import static principal.FrPrincipal.panelDetalleCita;
import static principal.FrPrincipal.panelFactura;

/**
 *
 * @author Alex
 */
public class PanelConsultaCita extends javax.swing.JPanel {

    public PanelConsultaCita() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAltaCliente1 = new principal.PanelAltaCliente();
        btnVerDetalle = new javax.swing.JButton();
        scrollTablaCita = new javax.swing.JScrollPane();
        tablaCita = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        btnVerDetalle.setBackground(new java.awt.Color(0, 102, 102));
        btnVerDetalle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnVerDetalle.setForeground(new java.awt.Color(255, 255, 255));
        btnVerDetalle.setText("VER DETALLE");
        btnVerDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerDetalleActionPerformed(evt);
            }
        });

        tablaCita.setBackground(new java.awt.Color(255, 255, 255));
        tablaCita.setForeground(new java.awt.Color(0, 0, 0));
        tablaCita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaCita.setSelectionBackground(new java.awt.Color(0, 102, 102));
        scrollTablaCita.setViewportView(tablaCita);

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("CITAS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVerDetalle)
                    .addComponent(scrollTablaCita, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnVerDetalle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollTablaCita, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerDetalleActionPerformed
        //si al pulsar el botón detalle se ha seleccionado un registro de la tabla se rellena el combobox hora, 
        //se visualiza el detalle cita y se le pasan los datos de la cita seleccionada
        if (tablaCita.getSelectedRow() >= 0) {
            rellenarComboboxHora();
            detalleCitaVista();
            pasarDatosDetalle();

        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una cita de la tabla");
        }
    }//GEN-LAST:event_btnVerDetalleActionPerformed

    //------------ Método para tener los datos en el detalle de la cita ---------------
    public void pasarDatosDetalle() {
        //recoge el modelo de la tabla y guarda cada columna en el label correspondiente del panel detalle
        DefaultTableModel m = (DefaultTableModel) tablaCita.getModel();

        panelDetalleCita.lblIdCita.setText((String) m.getValueAt(tablaCita.getSelectedRow(), 1));
        panelDetalleCita.lblMotivo.setText((String) m.getValueAt(tablaCita.getSelectedRow(), 2));
        panelDetalleCita.lblCliente.setText((String) m.getValueAt(tablaCita.getSelectedRow(), 4));
        panelDetalleCita.lblMascota.setText((String) m.getValueAt(tablaCita.getSelectedRow(), 5));
        panelDetalleCita.lblFecha.setText((String) m.getValueAt(tablaCita.getSelectedRow(), 3));

    }

    //------------- Método para visualizar el panel detalle cita ------------
    public void detalleCitaVista() {
        panelVisible(panelDetalleCita);

        panelDetalleCita.calendarioCita.setVisible(false);
        panelDetalleCita.lblFecha2.setVisible(false);
        panelDetalleCita.cbHora.setVisible(false);
        panelDetalleCita.lblHora.setVisible(false);
        menu.setVisible(false);
    }

//--------------- Método para hacer visible uno de los paneles ---------------
    public void panelVisible(JPanel p) {
        panelBienvenida.setVisible(false);
        panelAltaCliente.setVisible(false);
        panelAltaMascota.setVisible(false);
        panelConsultaMascota.setVisible(false);
        panelConsultaCliente.setVisible(false);
        panelConsultaCita.setVisible(false);
        panelDetalleCita.setVisible(false);
        panelConsultaHistorial.setVisible(false);
        panelAltaHistorial.setVisible(false);
        panelFactura.setVisible(false);

        p.setVisible(true);
    }

    //-------------- Método para rellenar el combobox hora -------------
    public void rellenarComboboxHora() {
        //borra los items que pueda tener el combobox
        panelDetalleCita.cbHora.removeAllItems();
        //rellena el combobox con las horas
        panelDetalleCita.cbHora.addItem("9:00");
        panelDetalleCita.cbHora.addItem("9:30");
        panelDetalleCita.cbHora.addItem("10:00");
        panelDetalleCita.cbHora.addItem("10:30");
        panelDetalleCita.cbHora.addItem("11:00");
        panelDetalleCita.cbHora.addItem("11:30");
        panelDetalleCita.cbHora.addItem("12:00");
        panelDetalleCita.cbHora.addItem("12:30");
        panelDetalleCita.cbHora.addItem("13:00");
        panelDetalleCita.cbHora.addItem("13:30");
        panelDetalleCita.cbHora.addItem("14:00");
        panelDetalleCita.cbHora.addItem("16:00");
        panelDetalleCita.cbHora.addItem("16:30");
        panelDetalleCita.cbHora.addItem("17:00");
        panelDetalleCita.cbHora.addItem("17:30");
        panelDetalleCita.cbHora.addItem("18:00");

    }

    //--------- Método para modificar hora según elección del combobox ------------
    public static Date horaYminuto(int num, Date d) {
        //según la elección del combobox guardará  las horas, minutos y segundo en 
        //un Date que será devuelto
        switch (num) {
            case 0:
                d.setHours(9);
                d.setMinutes(0);
                d.setSeconds(0);
                break;
            case 1:
                d.setHours(9);
                d.setMinutes(30);
                d.setSeconds(0);
                break;
            case 2:
                d.setHours(10);
                d.setMinutes(0);
                d.setSeconds(0);
                break;
            case 3:
                d.setHours(10);
                d.setMinutes(30);
                d.setSeconds(0);
                break;
            case 4:
                d.setHours(11);
                d.setMinutes(0);
                d.setSeconds(0);
                break;
            case 5:
                d.setHours(11);
                d.setMinutes(30);
                d.setSeconds(0);
                break;
            case 6:
                d.setHours(12);
                d.setMinutes(0);
                d.setSeconds(0);
                break;
            case 7:
                d.setHours(12);
                d.setMinutes(30);
                d.setSeconds(0);
                break;
            case 8:
                d.setHours(13);
                d.setMinutes(0);
                d.setSeconds(0);
                break;
            case 9:
                d.setHours(13);
                d.setMinutes(30);
                d.setSeconds(0);
                break;
            case 10:
                d.setHours(14);
                d.setMinutes(0);
                d.setSeconds(0);
                break;
            case 11:
                d.setHours(16);
                d.setMinutes(0);
                d.setSeconds(0);
                break;
            case 12:
                d.setHours(16);
                d.setMinutes(30);
                d.setSeconds(0);
                break;
            case 13:
                d.setHours(17);
                d.setMinutes(0);
                d.setSeconds(0);
                break;
            case 14:
                d.setHours(17);
                d.setMinutes(30);
                d.setSeconds(0);
                break;
            case 15:
                d.setHours(18);
                d.setMinutes(0);
                d.setSeconds(0);
                break;
        }

        return d;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVerDetalle;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel4;
    private principal.PanelAltaCliente panelAltaCliente1;
    public javax.swing.JScrollPane scrollTablaCita;
    public javax.swing.JTable tablaCita;
    // End of variables declaration//GEN-END:variables
}
