/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import beans.Mascota;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.Socket;
import javax.swing.JOptionPane;
import static principal.FrPrincipal.IP;
import static principal.FrPrincipal.PUERTO;
import static principal.FrPrincipal.out;
import static principal.FrPrincipal.in;
import static principal.FrPrincipal.outObj;
import static principal.FrPrincipal.sc;

/**
 *
 * @author Alex
 */
public class PanelAltaMascota extends javax.swing.JPanel {

    public PanelAltaMascota() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtChip = new javax.swing.JTextField();
        txtNombreMascota = new javax.swing.JTextField();
        txtAnioNac = new javax.swing.JTextField();
        txtEspecie = new javax.swing.JTextField();
        txtPeso = new javax.swing.JTextField();
        txtCliente = new javax.swing.JTextField();
        btnCancelarMascota = new javax.swing.JButton();
        btnGuardarMascota = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        txtChip.setBackground(new java.awt.Color(0, 102, 102));
        txtChip.setForeground(new java.awt.Color(255, 255, 255));

        txtNombreMascota.setBackground(new java.awt.Color(0, 102, 102));
        txtNombreMascota.setForeground(new java.awt.Color(255, 255, 255));

        txtAnioNac.setBackground(new java.awt.Color(0, 102, 102));
        txtAnioNac.setForeground(new java.awt.Color(255, 255, 255));

        txtEspecie.setBackground(new java.awt.Color(0, 102, 102));
        txtEspecie.setForeground(new java.awt.Color(255, 255, 255));

        txtPeso.setBackground(new java.awt.Color(0, 102, 102));
        txtPeso.setForeground(new java.awt.Color(255, 255, 255));

        txtCliente.setBackground(new java.awt.Color(0, 102, 102));
        txtCliente.setForeground(new java.awt.Color(255, 255, 255));

        btnCancelarMascota.setBackground(new java.awt.Color(0, 102, 102));
        btnCancelarMascota.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCancelarMascota.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarMascota.setText("CANCELAR");
        btnCancelarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarMascotaActionPerformed(evt);
            }
        });

        btnGuardarMascota.setBackground(new java.awt.Color(0, 102, 102));
        btnGuardarMascota.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuardarMascota.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardarMascota.setText("GUARDAR");
        btnGuardarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarMascotaActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("DNI Cliente*:");

        jLabel19.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Peso (opcional):");

        jLabel17.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Especie (opcional):");

        jLabel9.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Año de nacimiento*:");

        jLabel8.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nombre*:");

        jLabel7.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Número de chip*:");

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("ALTA MASCOTA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(jLabel10)
                .addContainerGap(249, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19)
                            .addComponent(jLabel22))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtChip, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAnioNac, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(btnGuardarMascota)
                        .addGap(49, 49, 49)
                        .addComponent(btnCancelarMascota)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAnioNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardarMascota)
                            .addComponent(btnCancelarMascota))))
                .addGap(0, 57, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarMascotaActionPerformed
        //al cancelar se ponen todos los caqmpos vacíos
        txtChip.setText("");
        txtNombreMascota.setText("");
        txtEspecie.setText("");
        txtAnioNac.setText("");
        txtPeso.setText("");
        txtCliente.setText("");
    }//GEN-LAST:event_btnCancelarMascotaActionPerformed

    private void btnGuardarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarMascotaActionPerformed
        if (txtChip.getText().length() > 50) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para el código del chip (máx 50 carácteres)");
        } else if (txtNombreMascota.getText().length() > 50) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para el nombre (máx 50 carácteres)");
        } else if (txtEspecie.getText().length() > 50) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para la especie (máx 50 carácteres)");
        } else if (txtCliente.getText().length() > 11) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para lel DNI del cliente (máx 11 carácteres)");
        } else {
            //si algún campo obligatorio está vacío muestra un mensaje
            if (txtChip.getText().equals("") || txtNombreMascota.getText().equals("") || txtAnioNac.getText().equals("")
                    || txtCliente.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Has dejado alguno de los campos obligatorios vacíos");
            } else {
                //si no están vacíos comrueba qie sea un número o decimal para entrar
                if (!esNumero(txtAnioNac.getText()) || !esDecimal(txtPeso.getText())) {
                    JOptionPane.showMessageDialog(null, "El campo año de nacimiento y peso debe ser un número");
                } else {
                    try {
                        sc = new Socket(IP, PUERTO);

                        out = new DataOutputStream(sc.getOutputStream());
                        in = new DataInputStream(sc.getInputStream());
                        //envía el DNI del cliente
                        out.writeUTF("," + txtCliente.getText());
                        //recibe el id del cliente
                        int idCliente = in.readInt();
                        //si el id es distinto de -1 entra
                        if (idCliente != -1) {

                            outObj = new ObjectOutputStream(sc.getOutputStream());
                            //se guarda el obejto mascota con los datos de los campos
                            Mascota mascota = new Mascota(txtChip.getText(), txtNombreMascota.getText(), Integer.parseInt(txtAnioNac.getText()),
                                    txtEspecie.getText(), Double.parseDouble(txtPeso.getText()), idCliente);
                            //se envía el objeto mascota al servidor
                            outObj.writeObject(mascota);
                            outObj.close();

                            //e muestra un mensaje de que se ha guardadao y se ponen los campos vacíos
                            JOptionPane.showMessageDialog(null, "Mascota registrada en base de datos");
                            txtChip.setText("");
                            txtNombreMascota.setText("");
                            txtAnioNac.setText("");
                            txtEspecie.setText("");
                            txtPeso.setText("");
                            txtCliente.setText("");

                        } else {
                            txtCliente.setText("");
                            JOptionPane.showMessageDialog(null, "El DNI es incorrecto");
                        }

                        out.close();
                        in.close();
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "Hay problemas en la conexión con el servidor");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnGuardarMascotaActionPerformed

    //--------- Método para comprobar si la cadena es un número ------------
    public static boolean esNumero(String cadena) {

        boolean resultado;

        try {
            Integer.parseInt(cadena);
            resultado = true;
        } catch (NumberFormatException excepcion) {
            resultado = false;
        }

        return resultado;
    }

    //--------- Método para comprobar si la cadena es un número ------------
    public static boolean esDecimal(String cadena) {

        boolean resultado;

        try {
            Float.parseFloat(cadena);
            resultado = true;
        } catch (NumberFormatException excepcion) {
            resultado = false;
        }

        return resultado;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarMascota;
    private javax.swing.JButton btnGuardarMascota;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField txtAnioNac;
    public javax.swing.JTextField txtChip;
    public javax.swing.JTextField txtCliente;
    public javax.swing.JTextField txtEspecie;
    public javax.swing.JTextField txtNombreMascota;
    public javax.swing.JTextField txtPeso;
    // End of variables declaration//GEN-END:variables
}
