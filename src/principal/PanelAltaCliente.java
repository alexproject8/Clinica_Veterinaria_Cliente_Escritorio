/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import beans.Cliente;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import static principal.FrPrincipal.IP;
import static principal.FrPrincipal.PUERTO;
import static principal.FrPrincipal.in;
import static principal.FrPrincipal.inObj;
import static principal.FrPrincipal.outObj;
import static principal.FrPrincipal.out;
import static principal.FrPrincipal.panelAltaCliente;
import static principal.FrPrincipal.panelAltaHistorial;
import static principal.FrPrincipal.panelAltaMascota;
import static principal.FrPrincipal.panelBienvenida;
import static principal.FrPrincipal.panelConsultaCita;
import static principal.FrPrincipal.panelConsultaCliente;
import static principal.FrPrincipal.panelConsultaHistorial;
import static principal.FrPrincipal.panelConsultaMascota;
import static principal.FrPrincipal.panelDetalleCita;
import static principal.FrPrincipal.panelFactura;
import static principal.FrPrincipal.sc;

/**
 *
 * @author Alex
 */
public class PanelAltaCliente extends javax.swing.JPanel {

    //variable para saber si viene del panel Alta o de consultaCliente
    boolean vieneDeAlta = true;

    public PanelAltaCliente() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtDniCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTlf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPoblacion = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnGuardarCliente = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        tituloAlta = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DNI*:");

        txtDniCliente.setBackground(new java.awt.Color(0, 102, 102));
        txtDniCliente.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre*:");

        txtNombreCliente.setBackground(new java.awt.Color(0, 102, 102));
        txtNombreCliente.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Apellidos*:");

        txtApellidos.setBackground(new java.awt.Color(0, 102, 102));
        txtApellidos.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Teléfono*:");

        txtTlf.setBackground(new java.awt.Color(0, 102, 102));
        txtTlf.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Dirección*:");

        txtDireccion.setBackground(new java.awt.Color(0, 102, 102));
        txtDireccion.setForeground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Población*:");

        txtPoblacion.setBackground(new java.awt.Color(0, 102, 102));
        txtPoblacion.setForeground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Email (opcional):");

        txtEmail.setBackground(new java.awt.Color(0, 102, 102));
        txtEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtEmail.setToolTipText("");
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        btnGuardarCliente.setBackground(new java.awt.Color(0, 102, 102));
        btnGuardarCliente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuardarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardarCliente.setText("GUARDAR Y DAR DE ALTA MASCOTA");
        btnGuardarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarClienteActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(0, 102, 102));
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        tituloAlta.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tituloAlta.setForeground(new java.awt.Color(255, 255, 255));
        tituloAlta.setText("ALTA CLIENTE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(tituloAlta)
                .addContainerGap(227, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloAlta)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGuardarCliente)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPoblacion, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTlf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDniCliente, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreCliente, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDniCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTlf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarCliente)
                    .addComponent(btnCancelar))
                .addGap(0, 38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarClienteActionPerformed
        if (txtNombreCliente.getText().length() > 50) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para el nombre (máx 50 carácteres)");
        } else if (txtDniCliente.getText().length() > 11) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para el DNI (máx 11 carácteres)");
        } else if (txtApellidos.getText().length() > 50) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para los apellidos (máx 50 carácteres)");
        } else if (txtDireccion.getText().length() > 50) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para la dirección (máx 50 carácteres)");
        } else if (txtTlf.getText().length() > 11) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para el teléfono (máx 11 carácteres)");
        } else if (txtPoblacion.getText().length() > 50) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para la población (máx 50 carácteres)");
        } else if (txtEmail.getText().length() > 50) {
            JOptionPane.showMessageDialog(null, "Has superado el límite de caracteres para el email (máx 50 carácteres)");
        } else {

//si viene de alta entra
            if (vieneDeAlta) {
                //si hay ningún campo obligatorio vacío no le pasa datos al servidor
                if (txtNombreCliente.getText().equals("") || txtDniCliente.getText().equals("")
                        || txtTlf.getText().equals("") || txtDireccion.getText().equals("")
                        || txtPoblacion.getText().equals("") || txtApellidos.getText().equals("")) {

                    JOptionPane.showMessageDialog(null, "Has dejado algún campo requerido vacío");

                } else {

                    try {
                        sc = new Socket(IP, PUERTO);

                        out = new DataOutputStream(sc.getOutputStream());
                        in = new DataInputStream(sc.getInputStream());
                        //le envía un mensaje al servidor para guardar un cliente
                        out.writeUTF("guardarcliente");
                        outObj = new ObjectOutputStream(sc.getOutputStream());

                        //se crea el objeto cliente con los datos introducidos en los campos
                        Cliente cliente = new Cliente(txtDniCliente.getText(), txtNombreCliente.getText(), txtApellidos.getText(), txtDireccion.getText(), txtPoblacion.getText(),
                                txtTlf.getText(), txtEmail.getText());
                        //se le envía el objeto cliente al servidor
                        outObj.writeObject(cliente);

                        //si el número recibido es -1 pone todos los campos vacíos y se ha guardado el cliente
                        if (in.readInt() == -1) {

                            txtDniCliente.setText("");
                            txtNombreCliente.setText("");
                            txtApellidos.setText("");
                            txtTlf.setText("");
                            txtDireccion.setText("");
                            txtPoblacion.setText("");
                            txtEmail.setText("");

                            JOptionPane.showMessageDialog(null, "Cliente registrado correctamente");

                            panelVisible(panelAltaMascota);
                        } else {
                            //si no es -1, no se ha guardado el cliente

                            txtDniCliente.setText("");
                            txtNombreCliente.setText("");
                            txtApellidos.setText("");
                            txtTlf.setText("");
                            txtDireccion.setText("");
                            txtPoblacion.setText("");
                            txtEmail.setText("");

                            JOptionPane.showMessageDialog(null, "Este cliente ya está registrado");
                        }

                        outObj.close();
                        out.close();
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "Hay problemas en la conexión con el servidor");
                    }

                }
            } else {
                //si no viene de alta pone el menú visible, cambio el nombre del botón, el título y pongo invisible
                //el calendario y el label fecha
                FrPrincipal.menu.setVisible(true);
                btnGuardarCliente.setText("GUARDAR Y DAR DE ALTA MASCOTA");
                tituloAlta.setText("ALTA CLIENTE");
                panelConsultaCliente.lblFechaBaja.setVisible(false);
                panelConsultaCliente.calendario.setVisible(false);
                //si los campos estám vacíos muestra un mensaje
                if (txtTlf.getText().equals("") || txtDireccion.getText().equals("") || txtPoblacion.getText().equals("")) {

                    JOptionPane.showMessageDialog(null, "Has dejado algún campo requerido vacío");

                } else {
                    //si no está vacíos entra aquí
                    try {
                        //recoge el modelo de la tabla
                        DefaultTableModel m = (DefaultTableModel) panelConsultaCliente.tablaCliente.getModel();

                        sc = new Socket(FrPrincipal.IP, FrPrincipal.PUERTO);

                        FrPrincipal.out = new DataOutputStream(sc.getOutputStream());
                        //envía un mensaje al servidor para modificar el cliente
                        FrPrincipal.out.writeUTF("modificarcliente");

                        FrPrincipal.outObj = new ObjectOutputStream(sc.getOutputStream());
                        //envío el objeto que obtengo del ID de la tabla y de los campos modificados
                        FrPrincipal.outObj.writeObject(new Cliente(Integer.parseInt((String) m.getValueAt(panelConsultaCliente.tablaCliente.getSelectedRow(), 0)),
                                txtDniCliente.getText(),
                                txtNombreCliente.getText(),
                                txtApellidos.getText(),
                                txtDireccion.getText(),
                                txtPoblacion.getText(),
                                txtTlf.getText(),
                                txtEmail.getText(),
                                null));

                        FrPrincipal.out.close();
                        FrPrincipal.outObj.close();

                        //consultaClienteVista();
                        consultaClienteListaCompleta();
                        //pongo los campos vacíos
                        txtDniCliente.setText("");
                        txtNombreCliente.setText("");
                        txtApellidos.setText("");
                        txtTlf.setText("");
                        txtDireccion.setText("");
                        txtPoblacion.setText("");
                        txtEmail.setText("");

                        JOptionPane.showMessageDialog(null, "Cliente modificado");
                        //hago el panel consultacliente visible
                        panelVisible(panelConsultaCliente);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "Hay problemas en la conexión con el servidor");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnGuardarClienteActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        //vacío todos los campos de alta cliente
        txtDniCliente.setText("");
        txtNombreCliente.setText("");
        txtApellidos.setText("");
        txtTlf.setText("");
        txtDireccion.setText("");
        txtPoblacion.setText("");
        txtEmail.setText("");
        //si no viene de alta lo dejo por defecto tal como estába
        if (!vieneDeAlta) {
            FrPrincipal.menu.setVisible(true);
            btnGuardarCliente.setText("GUARDAR Y DAR DE ALTA MASCOTA");
            tituloAlta.setText("ALTA CLIENTE");
            panelConsultaCliente.lblFechaBaja.setVisible(false);
            panelConsultaCliente.calendario.setVisible(false);
            panelConsultaCliente.btnImprimir.setVisible(false);

            panelVisible(panelConsultaCliente);
            resetearTodo();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed
//--------------- Método para hacer visible uno de los paneles ---------------

    public void panelVisible(JPanel p) {
        panelBienvenida.setVisible(false);
        panelAltaCliente.setVisible(false);
        panelAltaMascota.setVisible(false);
        panelConsultaMascota.setVisible(false);
        panelConsultaCliente.setVisible(false);
        panelConsultaCita.setVisible(false);
        panelDetalleCita.setVisible(false);
        panelConsultaHistorial.setVisible(false);
        panelAltaHistorial.setVisible(false);
        panelFactura.setVisible(false);

        p.setVisible(true);
    }

    //----------- Método para poner este panel por defecto como al entrar por primera vez -----------
    public void resetearTodo() {

        panelConsultaCliente.buttonGroupCliente.clearSelection();
        panelConsultaCliente.txtFiltro.setVisible(false);
        panelConsultaCliente.txtFiltro.setText("");
        panelConsultaCliente.btnFiltrar.setVisible(false);

        panelConsultaCliente.btnBaja.setVisible(false);
        panelConsultaCliente.btnFactura.setVisible(false);
        panelConsultaCliente.btnFiltrar.setVisible(false);
        panelConsultaCliente.btnModificarCliente.setVisible(false);

        txtDniCliente.setText("");
        txtNombreCliente.setText("");
        txtApellidos.setText("");
        txtTlf.setText("");
        txtDireccion.setText("");
        txtPoblacion.setText("");

    }

    //---------------- Método para mostrar lista completa de clientes en el panel de consultacliente---------------
    public void consultaClienteListaCompleta() {
        try {
            //pone el scroll del panel visible
            panelConsultaCliente.scrollCliente.setVisible(true);
            Cliente c;
            //creo las columnas y recojo el modelo de la tabla
            String[] columnas = {"ID", "DNI", "Nombre", "Apellidos", "Dirección", "Población", "Teléfono", "Email", "Baja"};
            DefaultTableModel modelo = new DefaultTableModel(null, columnas);

            sc = new Socket(IP, PUERTO);

            out = new DataOutputStream(sc.getOutputStream());
            in = new DataInputStream(sc.getInputStream());
            //se envía un mensaje al servidor y se recoge el número
            out.writeUTF("listaclientes");
            int num = in.readInt();
            //si el número es mayor pone todo visible en consultaCliente
            if (num > 0) {
                panelConsultaCliente.scrollCliente.setVisible(true);
                panelConsultaCliente.lblFechaBaja.setVisible(true);
                panelConsultaCliente.calendario.setVisible(true);
                panelConsultaCliente.btnModificarCliente.setVisible(true);
                panelConsultaCliente.btnFactura.setVisible(true);
                panelConsultaCliente.btnBaja.setVisible(true);

                inObj = new ObjectInputStream(sc.getInputStream());

                String baja;

                //bucle para recoger todos los clientes y guardarlos en la tabla
                for (int i = 0; i < num; i++) {
                    c = (Cliente) inObj.readObject();
                    //si baja viene nulo lo guarda como string "No"
                    if (c.getBaja() == null) {
                        baja = "No";
                    } else {
                        baja = new SimpleDateFormat("dd-MM-yyyy").format(c.getBaja());
                    }
                    //los añade en un array de string 
                    String[] filas = {String.valueOf(c.getIdcliente()), c.getDni(), c.getNombre(), c.getApellidos(), c.getDireccion(),
                        c.getPoblacion(), c.getTelefono(), c.getEmail(), baja};
                    //lo añade al modelo
                    modelo.addRow(filas);
                }
                //guarda el modelo en la tabla
                panelConsultaCliente.tablaCliente.setModel(modelo);

            } else {
                panelConsultaCliente.scrollCliente.setVisible(false);
                panelConsultaCliente.lblFechaBaja.setVisible(false);
                panelConsultaCliente.calendario.setVisible(false);
                panelConsultaCliente.btnModificarCliente.setVisible(false);
                panelConsultaCliente.btnFactura.setVisible(false);
                panelConsultaCliente.btnBaja.setVisible(false);
                JOptionPane.showMessageDialog(null, "No hay datos que mostrar");
            }

            out.close();
            in.close();
        } catch (IOException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Hay problemas en la conexión con el servidor");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnCancelar;
    public javax.swing.JButton btnGuardarCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JLabel tituloAlta;
    public javax.swing.JTextField txtApellidos;
    public javax.swing.JTextField txtDireccion;
    public javax.swing.JTextField txtDniCliente;
    public javax.swing.JTextField txtEmail;
    public javax.swing.JTextField txtNombreCliente;
    public javax.swing.JTextField txtPoblacion;
    public javax.swing.JTextField txtTlf;
    // End of variables declaration//GEN-END:variables
}
