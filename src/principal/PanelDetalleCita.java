/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import beans.Cita;
import java.awt.Component;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import static principal.FrPrincipal.IP;
import static principal.FrPrincipal.PUERTO;
import static principal.FrPrincipal.in;
import static principal.FrPrincipal.inObj;
import static principal.FrPrincipal.menu;
import static principal.FrPrincipal.out;
import static principal.FrPrincipal.panelAltaCliente;
import static principal.FrPrincipal.panelAltaHistorial;
import static principal.FrPrincipal.panelAltaMascota;
import static principal.FrPrincipal.panelBienvenida;
import static principal.FrPrincipal.panelConsultaCita;
import static principal.FrPrincipal.panelConsultaCliente;
import static principal.FrPrincipal.panelConsultaHistorial;
import static principal.FrPrincipal.panelConsultaMascota;
import static principal.FrPrincipal.panelDetalleCita;
import static principal.FrPrincipal.panelFactura;
import static principal.FrPrincipal.sc;

/**
 *
 * @author Alex
 */
public class PanelDetalleCita extends javax.swing.JPanel {
    
    public PanelDetalleCita() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        lblIdCita = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        lblMotivo = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        lblMascota = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        btnAnular = new javax.swing.JButton();
        btnModificarCita = new javax.swing.JButton();
        btnCancelarCita = new javax.swing.JButton();
        cbHora = new javax.swing.JComboBox<>();
        calendarioCita = new com.toedter.calendar.JDateChooser();
        lblFecha2 = new javax.swing.JLabel();
        lblHora = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("ID:");

        lblIdCita.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        lblIdCita.setForeground(new java.awt.Color(255, 255, 255));
        lblIdCita.setText("???");

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Motivo:");

        lblMotivo.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        lblMotivo.setForeground(new java.awt.Color(255, 255, 255));
        lblMotivo.setText("???");

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Cliente:");

        lblCliente.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        lblCliente.setForeground(new java.awt.Color(255, 255, 255));
        lblCliente.setText("???");

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Mascota:");

        lblMascota.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        lblMascota.setForeground(new java.awt.Color(255, 255, 255));
        lblMascota.setText("???");

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Fecha:");

        lblFecha.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha.setText("???");

        btnAnular.setBackground(new java.awt.Color(0, 102, 102));
        btnAnular.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAnular.setForeground(new java.awt.Color(255, 255, 255));
        btnAnular.setText("ANULAR CITA");
        btnAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnularActionPerformed(evt);
            }
        });

        btnModificarCita.setBackground(new java.awt.Color(0, 102, 102));
        btnModificarCita.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnModificarCita.setForeground(new java.awt.Color(255, 255, 255));
        btnModificarCita.setText("MODIFICAR FECHA");
        btnModificarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCitaActionPerformed(evt);
            }
        });

        btnCancelarCita.setBackground(new java.awt.Color(0, 102, 102));
        btnCancelarCita.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCancelarCita.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarCita.setText("CANCELAR");
        btnCancelarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCitaActionPerformed(evt);
            }
        });

        cbHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        calendarioCita.setBackground(new java.awt.Color(0, 102, 102));
        calendarioCita.setForeground(new java.awt.Color(255, 255, 255));

        lblFecha2.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha2.setText("Fecha:");

        lblHora.setForeground(new java.awt.Color(255, 255, 255));
        lblHora.setText("Hora:");

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("DETALLE CITA");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(jLabel7)
                .addContainerGap(222, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(18, 18, 18)
                        .addComponent(lblFecha))
                    .addComponent(jLabel16)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMascota))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCliente))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIdCita)
                            .addComponent(lblMotivo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFecha2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblHora, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calendarioCita, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbHora, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addComponent(btnAnular)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnModificarCita)
                    .addGap(18, 18, 18)
                    .addComponent(btnCancelarCita)
                    .addContainerGap(136, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calendarioCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFecha2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHora)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(lblIdCita))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(lblMotivo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(lblCliente))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(lblMascota))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(lblFecha))))
                .addContainerGap(129, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(297, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAnular)
                        .addComponent(btnModificarCita)
                        .addComponent(btnCancelarCita))
                    .addGap(61, 61, 61)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnularActionPerformed

        try {
            sc = new Socket(IP, PUERTO);

            out = new DataOutputStream(sc.getOutputStream());
            in = new DataInputStream(sc.getInputStream());
            //envía el idcita al servidor para anular la cita y vuelve a la pantalla de consulta cita
            out.writeUTF("=" + lblIdCita.getText());

            JOptionPane.showMessageDialog(null, "Se ha anulado la cita");

            out.close();
            in.close();

            panelVisible(panelConsultaCita);
            menu.setVisible(true);
            //lista las citas en la Jtable
            listarCitas();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Hay problemas en la conexión con el servidor");
        }
    }//GEN-LAST:event_btnAnularActionPerformed

    private void btnModificarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarCitaActionPerformed
        //comprueba el texto del botón, si entra visualiza los componenetes y cambia el texto del botón
        if (btnModificarCita.getText().equals("MODIFICAR FECHA")) {
            calendarioCita.setVisible(true);
            cbHora.setVisible(true);
            lblFecha2.setVisible(true);
            lblHora.setVisible(true);

            btnAnular.setVisible(false);
            btnModificarCita.setText("GUARDAR FECHA");

        } else {
            //si la fecha seleccionada no es nulo entra
            if (calendarioCita.getDate() != null) {
                //si la fecha se modifica correctamente vuelve al panel consulta y lista las citas
                if (modificarFechaCita()) {
                    panelVisible(panelConsultaCita);
                    menu.setVisible(true);
                    listarCitas();

                    btnAnular.setVisible(true);
                    calendarioCita.setVisible(false);
                    cbHora.setVisible(false);
                    btnModificarCita.setText("MODIFICAR FECHA");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debes seleccionar una fecha");
            }
        }
    }//GEN-LAST:event_btnModificarCitaActionPerformed

    private void btnCancelarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCitaActionPerformed
        //ponemos los componentes por defecto y volvemos a la pantalla de consulta cita
        calendarioCita.setVisible(false);
        cbHora.setVisible(false);

        menu.setVisible(true);
        panelVisible(panelConsultaCita);
        btnAnular.setVisible(true);
        btnModificarCita.setText("MODIFICAR FECHA");
        listarCitas();

        //Ajustamos el ancho de la jtable
        resizeColumnWidth(panelConsultaCita.tablaCita);
        panelConsultaCita.tablaCita.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }//GEN-LAST:event_btnCancelarCitaActionPerformed

    //------------ Método para mostrar panel consulta cita y listar citas --------------------
    public void listarCitas() {
        //pongo la tabla invisible
        panelConsultaCita.scrollTablaCita.setVisible(false);
        //vamos a la pantalla de consulta cita
        panelVisible(panelConsultaCita);

        //hago visible la tabla
        panelConsultaCita.scrollTablaCita.setVisible(true);
        
        Cita c;
        //añado columnas al modelo
        String[] columnas = {"", "ID", "Motivo", "Fecha", "ID Cliente", "Id Mascota"};
        DefaultTableModel modelo = new DefaultTableModel(null, columnas);

        try {
            sc = new Socket(IP, PUERTO);

            out = new DataOutputStream(sc.getOutputStream());
            in = new DataInputStream(sc.getInputStream());
            //envío un mensaje al servidor para que devuelva las citas
            out.writeUTF("listacitas");
            //recoge el número de citas que hay
            int num = in.readInt();

            inObj = new ObjectInputStream(sc.getInputStream());
            //inicializa arraylist
            List<Cita> lista = new ArrayList();
            //en un bucle se van añadiendo las citas al arraylist
            for (int i = 0; i < num; i++) {
                c = (Cita) inObj.readObject();
                if (c.getFecha().compareTo(new Date()) >= 0) {

                    lista.add(c);

                }
            }

            //Ordeno el objeto cita de mayor a menor según la fecha
            Collections.sort(lista, new Comparator<Cita>() {
                @Override
                public int compare(Cita o1, Cita o2) {
                    return new Integer(o2.getFecha().compareTo(o1.getFecha()));
                }
            });
            //bucle para añadir todas las filas a al modelo
            for (int i = 0; i < lista.size(); i++) {
                String[] filas = {"", String.valueOf(lista.get(i).getIdcita()), lista.get(i).getMotivo(), lista.get(i).getFecha().toString(),
                    String.valueOf(lista.get(i).getIdcliente()), String.valueOf(lista.get(i).getIdmascota())};
                //se añaden las filas al modelo
                modelo.addRow(filas);
            }
            //se añade el model a la tabla
            panelConsultaCita.tablaCita.setModel(modelo);

            out.close();
            in.close();

        } catch (IOException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Hay problemas en la conexión con el servidor");
        }
    }

//--------------- Método para hacer visible uno de los paneles ---------------
    public void panelVisible(JPanel p) {
        panelBienvenida.setVisible(false);
        panelAltaCliente.setVisible(false);
        panelAltaMascota.setVisible(false);
        panelConsultaMascota.setVisible(false);
        panelConsultaCliente.setVisible(false);
        panelConsultaCita.setVisible(false);
        panelDetalleCita.setVisible(false);
        panelConsultaHistorial.setVisible(false);
        panelAltaHistorial.setVisible(false);
        panelFactura.setVisible(false);

        p.setVisible(true);
    }

    //--------------- Método para modificar la fecha de la cita -----------------
    public boolean modificarFechaCita() {
        //boleano para saber que se ha modificado la cita satisfactoriamente
        boolean correcto = false;
        //recoge la hora
        Date d = panelConsultaCita.horaYminuto(cbHora.getSelectedIndex(), calendarioCita.getDate());
        //si es mayor a la de hoy entra
        if (d.compareTo(new Date()) > 0) {
            try {
                sc = new Socket(IP, PUERTO);
                out = new DataOutputStream(sc.getOutputStream());
                in = new DataInputStream(sc.getInputStream());
                //envía el ID y la fecha para modificar la cita
                out.writeUTF("&" + lblIdCita.getText() + "+" + d.getTime());
                //si el boleano recibido es true muestra un mensaje y devuelve true
                if (in.readBoolean()) {

                    JOptionPane.showMessageDialog(null, "Se ha modificado la fecha de la cita");

                    out.close();
                    in.close();

                    correcto = true;

                } else {
                    JOptionPane.showMessageDialog(null, "La fecha y hora elegida ya están cogidas, pruebe otra fecha");
                }

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Hay problemas en la conexión con el servidor");
            }
        } else {
            correcto = false;
            JOptionPane.showMessageDialog(null, "La fecha debe ser posterior a hoy");
        }

        return correcto;
    }

    //------------ Método para ajustar el ancho de la jtable -------------
    private void resizeColumnWidth(JTable table) {
        //Se obtiene el modelo de la columna
        TableColumnModel columnModel = table.getColumnModel();
        //Se obtiene el total de las columnas
        for (int column = 0; column < table.getColumnCount(); column++) {
            //Establecemos un valor minimo para el ancho de la columna
            int width = 150; //Min Width
            //Obtenemos el numero de filas de la tabla
            for (int row = 0; row < table.getRowCount(); row++) {
                //Obtenemos el renderizador de la tabla
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                //Creamos un objeto para preparar el renderer
                Component comp = table.prepareRenderer(renderer, row, column);
                //Establecemos el width segun el valor maximo del ancho de la columna
                width = Math.max(comp.getPreferredSize().width + 1, width);

            }
            //Se establece una condicion para no sobrepasar el valor de 300
            //Esto es Opcional
            if (width > 300) {
                width = 300;
            }
            //Se establece el ancho de la columna
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnular;
    private javax.swing.JButton btnCancelarCita;
    private javax.swing.JButton btnModificarCita;
    public com.toedter.calendar.JDateChooser calendarioCita;
    public javax.swing.JComboBox<String> cbHora;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel4;
    public javax.swing.JLabel lblCliente;
    public javax.swing.JLabel lblFecha;
    public javax.swing.JLabel lblFecha2;
    public javax.swing.JLabel lblHora;
    public javax.swing.JLabel lblIdCita;
    public javax.swing.JLabel lblMascota;
    public javax.swing.JLabel lblMotivo;
    // End of variables declaration//GEN-END:variables
}
